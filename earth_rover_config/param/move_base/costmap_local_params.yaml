### Local costmap parameters - load with the namespace "local_costmap" in the launch file ###

# The global frame for the local costmap to operate in.
global_frame: odom

# The name of the frame for the base link of the robot.
robot_base_frame: base_link

rolling_window: true

width: 3  # 10
height: 3  # 10

plugins:
    # parameters defined in costmap commmon parameters file
    # - {name: static_map,       type: "costmap_2d::StaticLayer"}
    - {name: obstacles,        type: "costmap_2d::ObstacleLayer"}
    # - {name: obstacles,        type: "costmap_2d::VoxelLayer"}
    - {name: inflation,        type: "costmap_2d::InflationLayer"}

# If false, each pixel has one of 2 states: lethal obstacle or free.
# If true, each pixel has one of 3 states: lethal obstacle, free, or unknown
track_unknown_space: false  # false

# If true, the robot footprint will clear (mark as free) the space in which it travels.
footprint_clearing_enabled: true  # true

# Changes the behaviour how the obstacle_layer handles incoming data from layers
# beyond it. Possible values are "Overwrite" (0), "Maximum" (1) and "Nothing" (99). "
combination_method: 1  # 1

# The maximum height of any obstacle to be inserted into the costmap in meters.
# This parameter should be set to be slightly higher than the height of your robot.
max_obstacle_height: 2.0

# The default maximum distance from the robot at which an obstacle will be
# inserted into the cost map in meters. This can be over-ridden on a per-sensor basis.
obstacle_range: 2.5

# The default range in meters at which to raytrace out obstacles from the map
# using sensor data. This can be over-ridden on a per-sensor basis.
raytrace_range: 3.0
